generator client {
  provider = "prisma-client-js"
  output   = "./generated/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String          @id @default(cuid())
  userId    Int             @unique @map("user_id")
  name      String
  role      Role            @default(user)
  account   ScreenTime?
  following FollowingItem[]
  custom    Boolean         @default(false)
  seriesSub Boolean         @default(false) @map("series_sub")
  updatedAt DateTime        @default(now()) @map("updated_at")
  createdAt DateTime        @default(now()) @map("created_at")

  @@index([userId])
  @@map("users")
}

model FollowingItem {
  id        String   @id @default(cuid())
  itemId    String   @unique
  name      String
  users     User[]
  updatedAt DateTime @default(now()) @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")

  @@index([itemId])
}

model ScreenTime {
  id        String   @id @default(cuid())
  ownerId   String   @unique
  kValue    String   @map("k_value")
  accountId String   @map("account_id")
  owner     User     @relation(fields: [ownerId], references: [id])
  updatedAt DateTime @default(now()) @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("screen_time_accounts")
}

model Movie {
  id        String   @id @default(cuid())
  link      String
  image     String
  title     String
  date      String
  summary   String
  updatedAt DateTime @default(now()) @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("movies")
}

model Show {
  id        String   @id @default(cuid())
  link      String
  image     String
  title     String
  date      String
  summary   String
  updatedAt DateTime @default(now()) @map("updated_at")
  createdAt DateTime @default(now()) @map("created_at")

  @@map("shows")
}

enum Role {
  user
  admin
}
